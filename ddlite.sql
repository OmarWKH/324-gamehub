--enable foreign keys
PRAGMA foreign_keys = ON;

-- Table GAME

CREATE TABLE GAME
(
  GAME_ID INTEGER NOT NULL,
  Name TEXT NOT NULL,
  Description TEXT,
  No_of_players INTEGER,
  Duration INTEGER,
  No_of_sessions INTEGER,
  Age_group TEXT,
  Competitve_level TEXT,
  CONSTRAINT Identifier1 PRIMARY KEY (GAME_ID)
);

-- Table VIDEO_GAME

CREATE TABLE VIDEO_GAME
(
  System_requirements TEXT,
  GAME_ID INTEGER NOT NULL,
  CONSTRAINT Identifier1 PRIMARY KEY (GAME_ID),
  CONSTRAINT GAME_VIDEO_GAME FOREIGN KEY (GAME_ID) REFERENCES GAME (GAME_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Table BOARD_GAME

CREATE TABLE BOARD_GAME
(
  Pieces TEXT,
  GAME_ID INTEGER NOT NULL,
  CONSTRAINT Identifier1 PRIMARY KEY (GAME_ID),
  CONSTRAINT GAME_BOARD_GAME FOREIGN KEY (GAME_ID) REFERENCES GAME (GAME_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Table PHYSICAL_GAME

CREATE TABLE PHYSICAL_GAME
(
  Physical_requirements TEXT,
  GAME_ID INTEGER NOT NULL,
  CONSTRAINT Identifier1 PRIMARY KEY (GAME_ID),
  CONSTRAINT GAME_PHYSICAL_GAME FOREIGN KEY (GAME_ID) REFERENCES GAME (GAME_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Table CARD_GAME

CREATE TABLE CARD_GAME
(
  Cards_type TEXT,
  GAME_ID INTEGER NOT NULL,
  CONSTRAINT Identifier1 PRIMARY KEY (GAME_ID),
  CONSTRAINT GAME_CARD_GAME FOREIGN KEY (GAME_ID) REFERENCES GAME (GAME_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Table TABLETOP_RPG

CREATE TABLE TABLETOP_RPG
(
  Narrative_authority TEXT,
  Settings TEXT,
  Play_Style TEXT,
  Components TEXT,
  GAME_ID INTEGER NOT NULL,
  CONSTRAINT Identifier1 PRIMARY KEY (GAME_ID),
  CONSTRAINT GAME_TABLETOP_RPG FOREIGN KEY (GAME_ID) REFERENCES GAME (GAME_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Table USERS
-- Replaced by django's auth-user
--CREATE TABLE "auth_user"(
--"id" integer NOT NULL PRIMARY KEY AUTOINCREMENT,
--"password" varchar(128) NOT NULL,
--"last_login" datetime NULL,
--"is_superuser" bool NOT NULL,
--"first_name" varchar(30) NOT NULL,
--"last_name" varchar(30) NOT NULL,
--"email" varchar(254) NOT NULL,
--"is_staff" bool NOT NULL,
--"is_active" bool NOT NULL,
--"date_joined" datetime NOT NULL,
--"username" varchar(30) NOT NULL UNIQUE);

-- Table GROUPS

CREATE TABLE GROUPS
(
  GROUP_ID INTEGER NOT NULL,
  Name TEXT NOT NULL,
  Description TEXT,
  Area TEXT NOT NULL,
  Is_public INTEGER NOT NULL,
  CREATOR_ID INTEGER,
  CONSTRAINT Identifier1 PRIMARY KEY (GROUP_ID),
  CONSTRAINT CREATES FOREIGN KEY (CREATOR_ID) references auth_user (id) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Table INSTANCES

CREATE TABLE INSTANCES
(
  Time NONE NOT NULL,
  INSTANCE_Location TEXT NOT NULL,
  GROUP_ID INTEGER NOT NULL,
  GAME_ID INTEGER,
  INSTANCE_ID INTEGER NOT NULL,
  CONSTRAINT Identifier1 PRIMARY KEY (INSTANCE_ID),
  CONSTRAINT GROUPS_INSTANCES FOREIGN KEY (INSTANCE_ID) REFERENCES GROUPS (GROUP_ID) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT BELONGS FOREIGN KEY (GROUP_ID) REFERENCES GROUPS (GROUP_ID) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT PLAYAING FOREIGN KEY (GAME_ID) REFERENCES GAME (GAME_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Table BLOGPOST

CREATE TABLE BLOGPOST
(
  Text TEXT NOT NULL,
  BP_Time NONE NOT NULL,
  Is_public NONE NOT NULL,
  POST_ID INTEGER NOT NULL,
  GROUP_ID INTEGER NOT NULL,
  USER_ID INTEGER NOT NULL,
  CONSTRAINT Identifier1 PRIMARY KEY (POST_ID,GROUP_ID,USER_ID),
  CONSTRAINT BELONGS_G FOREIGN KEY (GROUP_ID) REFERENCES GROUPS (GROUP_ID) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT WRITES_B FOREIGN KEY (USER_ID) REFERENCES auth_user (id) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Table LIST

CREATE TABLE LIST
(
  ID INTEGER PRIMARY KEY AUTOINCREMENT, --surrogate for django primary key
  Note TEXT,
  Ownership TEXT,
  Skill TEXT,
  GAME_ID INTEGER NOT NULL,
  USER_ID INTEGER NOT NULL,
  CONSTRAINT GL FOREIGN KEY (GAME_ID) REFERENCES GAME (GAME_ID) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT UL FOREIGN KEY (USER_ID) references auth_user (id) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Table TYPE

CREATE TABLE TYPE
(
  ID INTEGER PRIMARY KEY AUTOINCREMENT, --surrogate for django primary key
  Genre TEXT,
  GAME_ID INTEGER NOT NULL,
  CONSTRAINT TYPE_OF FOREIGN KEY (GAME_ID) REFERENCES GAME (GAME_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Table USERS_GROUPS

CREATE TABLE USERS_GROUPS
(
  ID INTEGER PRIMARY KEY AUTOINCREMENT, --surrogate for django primary key
  USER_ID INTEGER NOT NULL,
  GROUP_ID INTEGER NOT NULL,
  CONSTRAINT MEMBER_OF FOREIGN KEY (USER_ID) references auth_user (id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT MEMBER_OF_G FOREIGN KEY (GROUP_ID) REFERENCES GROUPS (GROUP_ID) ON DELETE CASCADE ON UPDATE CASCADE
);
